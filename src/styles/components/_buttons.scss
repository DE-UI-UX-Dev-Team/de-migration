@use "sass:map"; 

@use '../abstracts' as *;

/*--- Components - Buttons ---*/

button,
[class*=btn],
[type="button"],
[type="submit"],
[type="reset"] {
    min-width: var(--btn--min-width);
    font: var(--btn--font);
    border-radius: var(--btn--corner-radius);
    text-align: center;
    text-transform: uppercase;
    padding: 1.6rem 2.4rem;
}

/*--- Components - Buttons, Selected ---*/

button.selected,
[class*=btn].selected,
[type="button"].selected,
[type="submit"].selected,
[type="reset"].selected {
    background-color: var(--primary-base);
    color: var(--white-base);
    border: none;
}

[class*="bg--primary-"] button.selected,
[class*="bg--primary-"] [class*=btn].selected,
[class*="bg--primary-"] input[type="button"].selected,
[class*="bg--primary-"] input[type="submit"].selected,
[class*="bg--primary-"] input[type="reset"].selected,
[class*="bg--secondary-"] button.selected,
[class*="bg--secondary-"] [class*=btn].selected,
[class*="bg--secondary-"] input[type="button"].selected,
[class*="bg--secondary-"] input[type="submit"].selected,
[class*="bg--secondary-"] input[type="reset"].selected{
    background-color: var(--white-base);
    color: var(--primary-base);
}

label[type="button"],
label[type="submit"],
label[type="reset"] {
    display: inline-block;
    cursor: pointer;
}

label[type="button"] > input,
label[type="submit"] > input,
label[type="reset"] > input, 
label[type="button"] > input:hover,
label[type="submit"] > input:hover,
label[type="reset"] > input:hover, 
label[type="button"] > input:focus,
label[type="submit"] > input:focus,
label[type="reset"] > input:focus,
label[type="button"] > input:active,
label[type="submit"] > input:active,
label[type="reset"] > input:active {
    background: transparent !important; 
    border: none; 
    padding: 0;
    display: inline;
    min-width: auto;
} 

label[type]:focus {
    outline: 2px;
}

label[type="button"] > input + i,
label[type="submit"] > input + i,
label[type="reset"] > input+ i {
    display: inline;
}
  
/*--- Color Scheme - Buttons on Contrasting Backgrounds ---*/ 

:root {
    /*--- Default Properties - Buttons ---*/

    --btn--font: bold 1.6rem/2.4rem var(--font-stack);
    --btn--min-width: 22.7rem;
    --btn--corner-radius:0.4rem;
    --btn--border: 0.2rem solid var(--primary-base);

    @each $palette, $buttonsOnLightBg in map.get( $buttonsOnLightBg, #{$active-theme} ) {
        @each $state, $properties in $buttonsOnLightBg { 
            @each $property, $value in $properties { 
                @if $value != null {
                    --#{$palette}-btn-on-lgt-bg--#{$state}--#{$property}: #{$value};
                }
            }
        }
    }

    @each $palette, $buttonsOnLightBg in map.get( $buttonsOnDarkBg, #{$active-theme} ) {
        @each $state, $properties in $buttonsOnLightBg { 
            @each $property, $value in $properties { 
                @if $value != null {
                    --#{$palette}-btn-on-drk-bg--#{$state}--#{$property}: #{$value};
                }
            }
        }
    }  
}

/*--- Components - Buttons on Light Backgrounds ---*/

@include getButtonsOnColorBg( $buttonsOnLightBg, "lightBackgrounds" ); 

/*--- Components - Buttons on Dark Backgrounds ---*/ 

@include getButtonsOnColorBg( $buttonsOnDarkBg, "darkBackgrounds" );